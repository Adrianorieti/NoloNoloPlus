var formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
<<<<<<< HEAD
      one: 'weniger als 1 Sekunde',
      other: 'weniger als {{count}} Sekunden'
    },
    withPreposition: {
      one: 'weniger als 1 Sekunde',
=======
      one: 'weniger als eine Sekunde',
      other: 'weniger als {{count}} Sekunden'
    },
    withPreposition: {
      one: 'weniger als einer Sekunde',
>>>>>>> Adrian
      other: 'weniger als {{count}} Sekunden'
    }
  },
  xSeconds: {
    standalone: {
<<<<<<< HEAD
      one: '1 Sekunde',
      other: '{{count}} Sekunden'
    },
    withPreposition: {
      one: '1 Sekunde',
=======
      one: 'eine Sekunde',
      other: '{{count}} Sekunden'
    },
    withPreposition: {
      one: 'einer Sekunde',
>>>>>>> Adrian
      other: '{{count}} Sekunden'
    }
  },
  halfAMinute: {
<<<<<<< HEAD
    standalone: 'halbe Minute',
    withPreposition: 'halben Minute'
  },
  lessThanXMinutes: {
    standalone: {
      one: 'weniger als 1 Minute',
      other: 'weniger als {{count}} Minuten'
    },
    withPreposition: {
      one: 'weniger als 1 Minute',
=======
    standalone: 'eine halbe Minute',
    withPreposition: 'einer halben Minute'
  },
  lessThanXMinutes: {
    standalone: {
      one: 'weniger als eine Minute',
      other: 'weniger als {{count}} Minuten'
    },
    withPreposition: {
      one: 'weniger als einer Minute',
>>>>>>> Adrian
      other: 'weniger als {{count}} Minuten'
    }
  },
  xMinutes: {
    standalone: {
<<<<<<< HEAD
      one: '1 Minute',
      other: '{{count}} Minuten'
    },
    withPreposition: {
      one: '1 Minute',
=======
      one: 'eine Minute',
      other: '{{count}} Minuten'
    },
    withPreposition: {
      one: 'einer Minute',
>>>>>>> Adrian
      other: '{{count}} Minuten'
    }
  },
  aboutXHours: {
    standalone: {
<<<<<<< HEAD
      one: 'etwa 1 Stunde',
      other: 'etwa {{count}} Stunden'
    },
    withPreposition: {
      one: 'etwa 1 Stunde',
=======
      one: 'etwa eine Stunde',
      other: 'etwa {{count}} Stunden'
    },
    withPreposition: {
      one: 'etwa einer Stunde',
>>>>>>> Adrian
      other: 'etwa {{count}} Stunden'
    }
  },
  xHours: {
    standalone: {
<<<<<<< HEAD
      one: '1 Stunde',
      other: '{{count}} Stunden'
    },
    withPreposition: {
      one: '1 Stunde',
=======
      one: 'eine Stunde',
      other: '{{count}} Stunden'
    },
    withPreposition: {
      one: 'einer Stunde',
>>>>>>> Adrian
      other: '{{count}} Stunden'
    }
  },
  xDays: {
    standalone: {
<<<<<<< HEAD
      one: '1 Tag',
      other: '{{count}} Tage'
    },
    withPreposition: {
      one: '1 Tag',
=======
      one: 'ein Tag',
      other: '{{count}} Tage'
    },
    withPreposition: {
      one: 'einem Tag',
>>>>>>> Adrian
      other: '{{count}} Tagen'
    }
  },
  aboutXWeeks: {
    standalone: {
<<<<<<< HEAD
      one: 'etwa 1 Woche',
      other: 'etwa {{count}} Wochen'
    },
    withPreposition: {
      one: 'etwa 1 Woche',
=======
      one: 'etwa ein Woche',
      other: 'etwa {{count}} Wochen'
    },
    withPreposition: {
      one: 'etwa einem Woche',
>>>>>>> Adrian
      other: 'etwa {{count}} Wochen'
    }
  },
  xWeeks: {
    standalone: {
<<<<<<< HEAD
      one: '1 Woche',
      other: '{{count}} Wochen'
    },
    withPreposition: {
      one: '1 Woche',
=======
      one: 'ein Woche',
      other: '{{count}} Wochen'
    },
    withPreposition: {
      one: 'einem Woche',
>>>>>>> Adrian
      other: '{{count}} Wochen'
    }
  },
  aboutXMonths: {
    standalone: {
<<<<<<< HEAD
      one: 'etwa 1 Monat',
      other: 'etwa {{count}} Monate'
    },
    withPreposition: {
      one: 'etwa 1 Monat',
=======
      one: 'etwa ein Monat',
      other: 'etwa {{count}} Monate'
    },
    withPreposition: {
      one: 'etwa einem Monat',
>>>>>>> Adrian
      other: 'etwa {{count}} Monaten'
    }
  },
  xMonths: {
    standalone: {
<<<<<<< HEAD
      one: '1 Monat',
      other: '{{count}} Monate'
    },
    withPreposition: {
      one: '1 Monat',
=======
      one: 'ein Monat',
      other: '{{count}} Monate'
    },
    withPreposition: {
      one: 'einem Monat',
>>>>>>> Adrian
      other: '{{count}} Monaten'
    }
  },
  aboutXYears: {
    standalone: {
<<<<<<< HEAD
      one: 'etwa 1 Jahr',
      other: 'etwa {{count}} Jahre'
    },
    withPreposition: {
      one: 'etwa 1 Jahr',
=======
      one: 'etwa ein Jahr',
      other: 'etwa {{count}} Jahre'
    },
    withPreposition: {
      one: 'etwa einem Jahr',
>>>>>>> Adrian
      other: 'etwa {{count}} Jahren'
    }
  },
  xYears: {
    standalone: {
<<<<<<< HEAD
      one: '1 Jahr',
      other: '{{count}} Jahre'
    },
    withPreposition: {
      one: '1 Jahr',
=======
      one: 'ein Jahr',
      other: '{{count}} Jahre'
    },
    withPreposition: {
      one: 'einem Jahr',
>>>>>>> Adrian
      other: '{{count}} Jahren'
    }
  },
  overXYears: {
    standalone: {
<<<<<<< HEAD
      one: 'mehr als 1 Jahr',
      other: 'mehr als {{count}} Jahre'
    },
    withPreposition: {
      one: 'mehr als 1 Jahr',
=======
      one: 'mehr als ein Jahr',
      other: 'mehr als {{count}} Jahre'
    },
    withPreposition: {
      one: 'mehr als einem Jahr',
>>>>>>> Adrian
      other: 'mehr als {{count}} Jahren'
    }
  },
  almostXYears: {
    standalone: {
<<<<<<< HEAD
      one: 'fast 1 Jahr',
      other: 'fast {{count}} Jahre'
    },
    withPreposition: {
      one: 'fast 1 Jahr',
=======
      one: 'fast ein Jahr',
      other: 'fast {{count}} Jahre'
    },
    withPreposition: {
      one: 'fast einem Jahr',
>>>>>>> Adrian
      other: 'fast {{count}} Jahren'
    }
  }
};

var formatDistance = function (token, count, options) {
<<<<<<< HEAD
  var result;
  var tokenValue = options !== null && options !== void 0 && options.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone;

  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', String(count));
  }

  if (options !== null && options !== void 0 && options.addSuffix) {
=======
  options = options || {};
  var usageGroup = options.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone;
  var result;

  if (typeof usageGroup === 'string') {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else {
    result = usageGroup.other.replace('{{count}}', String(count));
  }

  if (options.addSuffix) {
>>>>>>> Adrian
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return 'vor ' + result;
    }
  }

  return result;
};

export default formatDistance;