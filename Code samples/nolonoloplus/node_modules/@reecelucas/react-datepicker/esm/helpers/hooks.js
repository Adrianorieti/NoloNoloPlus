import * as React from 'react';
export var useDebounce = function (value, delay) {
    var _a = React.useState(value), debouncedValue = _a[0], setDebouncedValue = _a[1];
    React.useEffect(function () {
        var timer = setTimeout(function () {
            setDebouncedValue(value);
        }, delay);
        return function () {
            clearTimeout(timer);
        };
    }, [value, delay]);
    return debouncedValue;
};
export var useUpdateEffect = function (effect, deps) {
    var isInitialMount = React.useRef(true);
    React.useEffect(isInitialMount.current
        ? function () {
            isInitialMount.current = false;
        }
        : effect, deps);
};
