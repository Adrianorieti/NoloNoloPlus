var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { getYear, getMonth } from 'date-fns';
import * as actionTypes from './actionTypes';
export default (function (state, action) {
    switch (action.type) {
        case actionTypes.INCREMENT_YEAR:
            return __assign({}, state, { year: state.year + 1 });
        case actionTypes.DECREMENT_YEAR:
            return __assign({}, state, { year: state.year - 1 });
        case actionTypes.INCREMENT_MONTH: {
            var newMonth = state.month + 1;
            var isNewYear = newMonth > 11;
            return __assign({}, state, { month: isNewYear ? 0 : newMonth, year: isNewYear ? state.year + 1 : state.year });
        }
        case actionTypes.DECREMENT_MONTH: {
            var newMonth = state.month - 1;
            var isNewYear = newMonth < 0;
            return __assign({}, state, { month: isNewYear ? 11 : newMonth, year: isNewYear ? state.year - 1 : state.year });
        }
        case actionTypes.SET_SELECTED_DATE:
            return __assign({}, state, { year: getYear(action.payload), month: getMonth(action.payload), selectedDate: action.payload, focussedDate: action.payload, showCalendar: false });
        case actionTypes.SET_FOCUSSED_DATE:
            return __assign({}, state, { year: getYear(action.payload), month: getMonth(action.payload), focussedDate: action.payload });
        case actionTypes.ALLOW_CELL_FOCUS:
            return __assign({}, state, { allowCellFocus: true });
        case actionTypes.PREVENT_CELL_FOCUS:
            return __assign({}, state, { allowCellFocus: false });
        case actionTypes.SHOW_CALENDAR:
            return __assign({}, state, { showCalendar: true });
        case actionTypes.HIDE_CALENDAR:
            return __assign({}, state, { year: getYear(state.selectedDate), month: getMonth(state.selectedDate), focussedDate: state.selectedDate, showCalendar: false });
        default:
            return state;
    }
});
