var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { format } from 'date-fns';
import { StateContext } from './DatePickerContext';
import { isFunction } from '../helpers/function';
var DatePickerMonth = function (_a) {
    var children = _a.children, _b = _a.dateFormat, dateFormat = _b === void 0 ? 'MMMM, yyyy' : _b, props = __rest(_a, ["children", "dateFormat"]);
    var _c = React.useContext(StateContext), year = _c.year, month = _c.month, locale = _c.locale;
    var formattedDate = format(new Date(year, month), dateFormat, { locale: locale });
    var renderDefault = function () { return React.createElement("span", __assign({}, props), formattedDate); };
    var render = function () {
        return isFunction(children) ? children(formattedDate) : renderDefault();
    };
    return React.useMemo(render, [
        year,
        month,
        locale,
        children,
        dateFormat
    ].concat(Object.keys(props)));
};
export default DatePickerMonth;
